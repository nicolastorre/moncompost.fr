server {
    listen 80;
    listen [::]:80;
    server_name www.{{ domain }};

    # Redirect www to non-www
    return 301 https://{{ domain }}$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.{{ domain }};

    # SSL certificate for www.moncompost.fr
    ssl_certificate /etc/letsencrypt/live/moncompost.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/moncompost.fr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Redirect www to non-www
    return 301 https://{{ domain }}$request_uri;
}

server {
    listen 80;
    listen [::]:80;
    server_name {{ domain }};

    # Redirection HTTP vers HTTPS pour le trafic de l'application et de l'API
    location / {
        return 301 https://\$host\$request_uri;
    }
}

server {
    server_name {{ domain }};

    # Servir l'application React
    root {{ nginx_server_root }};
    index index.html;

    location / {
        try_files \$uri /index.html;
    }

    # Reverse Proxy pour l'API Node.js
    location /api/ {
        proxy_pass http://localhost:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
    }

    # Optionnel : Ajouter des configurations pour les logs d'acc√®s et d'erreurs
    access_log /var/log/nginx/react_node_access.log;
    error_log /var/log/nginx/react_node_error.log;

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}